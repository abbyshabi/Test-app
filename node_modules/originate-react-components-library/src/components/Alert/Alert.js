import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import classnames from 'classnames';
import { rgba, rem } from 'polished';
import { CloseIcon } from '../Icon';

const Alert = props => {
  const { children, className, dismissible, style } = props;
  return (
    <StyledAlert className={classnames(`${className}`)} style={style}>
      {children}
      {dismissible && (
        <DismissButton>
          <CloseIcon />
        </DismissButton>
      )}
    </StyledAlert>
  );
};

const DismissButton = styled.button`
  background: none;
  border: none;
  box-shadow: none;
  cursor: pointer;
  margin: 0;
  outline: none;
  padding: 0;
  position: relative;
  right: ${rem('12px')};
  top: ${rem('5px')};
  float: right;

  svg {
    display: block;
  }
`;

const StyledAlert = styled.div`
  border: 1px solid ${({ theme }) => theme.__OriginateLib.colors.grey};
  border-radius: ${rem('4px')};
  display: block;
  font-size: ${rem('14px')};
  line-height: ${rem('25px')};
  margin: 0 0 ${rem('24px')};
  padding: ${rem('15px')} ${rem('20px')};
  position: relative;
  text-align: center;
  min-width: 50%;

  &.error {
    border-color: ${({ theme }) => theme.__OriginateLib.colors.red};
    background-color: ${({ theme }) =>
      rgba(theme.__OriginateLib.colors.red, 0.07)};
    color: ${({ theme }) => theme.__OriginateLib.colors.red};
  }

  &.warning {
    border-color: ${({ theme }) => theme.__OriginateLib.colors.red};
    background-color: ${({ theme }) =>
      rgba(theme.__OriginateLib.colors.red, 0.07)};
    color: ${({ theme }) => theme.__OriginateLib.colors.red};
  }

  &.success {
    border-color: ${({ theme }) => theme.__OriginateLib.colors.green};
    background-color: ${({ theme }) =>
      rgba(theme.__OriginateLib.colors.green, 0.07)};
    color: ${({ theme }) => theme.__OriginateLib.colors.text};
  }
`;

Alert.propTypes = {
  className: PropTypes.string,
  style: PropTypes.object
};

Alert.defaultProps = {
  className: '',
  style: {}
};

export default Alert;
