import React, { Fragment } from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { BrowserRouter, Link } from 'react-router-dom';
import { rem } from 'polished';

import { Button, Container, ThemeProvider } from '..';

const Header = ({ authentication, logoUrl, clientName, logout }) => {
  return (
    <ThemeProvider>
      <BrowserRouter>
        <StyledHeader>
          <Container>
            {authentication.hasApiKey && !authentication.isTempApiKey ? (
              <Fragment>
                <HeaderLeft>
                  <Link to="/dashboard">
                    <img src={logoUrl} alt={clientName} />
                  </Link>
                </HeaderLeft>
                <HeaderRight>
                  <Button onClick={logout}>Logout</Button>
                </HeaderRight>
              </Fragment>
            ) : (
              <Fragment>
                <HeaderLeft>
                  <Link to="/">
                    <img src={logoUrl} alt={clientName} />
                  </Link>
                </HeaderLeft>
                {authentication.hasApiKey ? (
                  <HeaderRight>
                    <Button onClick={logout}>Logout</Button>
                  </HeaderRight>
                ) : (
                  <HeaderRight>
                    <Link to="/sign-in" className="button right">
                      Sign In
                    </Link>
                  </HeaderRight>
                )}
              </Fragment>
            )}
          </Container>
        </StyledHeader>
      </BrowserRouter>
    </ThemeProvider>
  );
};
const HeaderLeft = styled.section`
  float: left;
  overflow: auto;
`;
const HeaderRight = styled.section`
  float: right;
  overflow: auto;
`;
const StyledHeader = styled.header`
  align-items: center;
  background: ${({ theme }) => theme.__OriginateLib.colors.white};
  padding: ${rem('15px')} 0;
  position: relative;
  z-index: 1;

  @include phone {
    padding: ${rem('10px')} 0;

    .button {
      margin: ${rem('2.5px')} 0;
      padding: ${rem('7.5px')} ${rem('15px')};
    }
  }

  a {
    float: left;
    min-width: ${rem('150px')};

    img {
      float: left;
      height: 40px;
    }
  }
`;

Header.defaultProps = {
  authentication: {
    hasApiKey: false,
    isTempApiKey: false
  }
};

Header.propTypes = {
  authentication: PropTypes.object,
  logoUrl: PropTypes.string.isRequired,
  clientName: PropTypes.string.isRequired,
  logout: PropTypes.func.isRequired
};

export default Header;
