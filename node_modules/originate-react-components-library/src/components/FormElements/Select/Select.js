import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { rem } from 'polished';
import img from '../../../static/icons/caret-down.svg';
import image from '../../../static/icons/error.svg';

const Select = ({
  className,
  autoComplete,
  autoFocus,
  defaultValue,
  disabled,
  name,
  onBlur,
  onChange,
  value,
  errorMessage,
  label,
  children
}) => {
  return (
    <SelectGroup>
      {label == null ? '' : <SelectLabel>{label}</SelectLabel>}
      <StyledSelect
        autoComplete={autoComplete}
        autoFocus={autoFocus}
        className={`select ${className == null ? '' : className}`}
        defaultValue={defaultValue}
        disabled={disabled}
        name={name}
        onBlur={onBlur}
        onChange={onChange}
        value={value}
      >
        {children}
      </StyledSelect>
      {errorMessage && <SelectErrorMessage>{errorMessage}</SelectErrorMessage>}
    </SelectGroup>
  );
};

const SelectGroup = styled.label`
  display: block;
  margin: 0 0 ${rem('20px')};
`;

const SelectErrorMessage = styled.span`
  color: ${({ theme }) => theme.__OriginateLib.colors.systemFail};
  display: block;
  font-size: ${rem('11px')};
  margin: 0;

  &:empty {
    display: none;
  }
`;

const SelectLabel = styled.span`
  color: ${({ theme }) => theme.__OriginateLib.colors.text2};
  display: inline-block;
  float: left;
  font-size: ${rem('11px')};
  font-weight: ${({ theme }) => theme.__OriginateLib.fontWeight.semiBold};
  line-height: ${rem('16px')};
  overflow: hidden;
  margin: 0 0 ${rem('8px')};
  text-transform: uppercase;
`;

const StyledSelect = styled.select`
  appearance: none;
  background: ${({ theme }) => theme.__OriginateLib.colors.white} url(${img})
    center right ${rem('10px')} no-repeat;
  border: 1px solid ${({ theme }) => theme.__OriginateLib.colors.text};
  border-radius: ${rem('4px')};
  box-shadow: none;
  box-sizing: border-box;
  display: block;
  line-height: ${rem('20px')};
  outline: none;
  padding: ${rem('10px')} ${rem('25px')} ${rem('10px')} ${rem('16px')};
  width: 100%;

  &.border-bottom {
    border-radius: 0;
    border-width: 0 0 1px 0;
    line-height: ${rem('20px')};
    padding: ${rem('10px')} 0;
  }

  &.error {
    background-image: url(${image});
    border-color: ${({ theme }) => theme.__OriginateLib.colors.systemFail};
  }

  .select__more-info {
    display: block;
    font-size: ${rem('12px')};
    line-height: ${rem('16px')};
    margin-top: ${rem('8px')};
  }
`;

Select.propTypes = {
  autoComplete: PropTypes.string,
  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  className: PropTypes.string,
  defaultValue: PropTypes.any,
  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  errorMessage: PropTypes.string,
  label: PropTypes.string,
  name: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  placeholder: PropTypes.string,
  readOnly: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  type: PropTypes.string,
  value: PropTypes.string
};

export default Select;
