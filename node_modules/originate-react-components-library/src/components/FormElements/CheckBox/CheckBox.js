import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { rgba, rem } from 'polished';

const CheckBox = ({
  className,
  value,
  disabled,
  checked,
  readOnly,
  name,
  placeholder,
  onChange,
  label
}) => {
  return (
    <StyledCheckbox className={'checkbox'}>
      <input
        className={`${className == null ? '' : className}`}
        type="checkbox"
        value={value}
        disabled={disabled}
        checked={checked}
        readOnly={readOnly}
        name={name}
        placeholder={placeholder}
        onChange={onChange}
      />
      <span className="checkbox__label">{label}</span>
    </StyledCheckbox>
  );
};

const StyledCheckbox = styled.label`
  cursor: pointer;
  display: inline-block;
  margin: 0 10px 20px;

  input {
    margin: 0;
    opacity: 0;
    position: absolute;
    width: 0;
    height: 0;
    cursor: pointer;

    &:checked + span {
      background: ${({ theme }) => theme.__OriginateLib.colors.white};
      border-color: ${({ theme }) => theme.__OriginateLib.colors.primary};
      color: ${({ theme }) => theme.__OriginateLib.colors.primary};

      &:before {
        border-color: ${({ theme }) => theme.__OriginateLib.colors.primary};
        background: ${({ theme }) => theme.__OriginateLib.colors.primary};
      }

      &:after {
        border-color: ${({ theme }) => theme.__OriginateLib.colors.white};
      }
    }
  }

  span {
    border: 1px solid ${({ theme }) => theme.__OriginateLib.colors.grey};
    border-radius: 3px;
    display: block;
    font-weight: ${({ theme }) => theme.__OriginateLib.fontWeight.semiBold};
    float: left;
    line-height: ${rem('20px')};
    margin: 0;
    outline: none;
    padding: ${rem('10px')} ${rem('10px')} ${rem('10px')} ${rem('40px')};
    position: relative;
    transition: all 0.2s ease-in;
    width: 100%;

    &:before {
      border: 1px solid
        ${({ theme }) => rgba(theme.__OriginateLib.colors.text, 0.3)};
      border-radius: 100%;
      box-sizing: border-box;
      content: '';
      left: ${rem('10px')};
      top: ${rem('10px')};
      height: 20px;
      position: absolute;
      width: 20px;
    }

    &:after {
      border-left: 2px solid transparent;
      border-bottom: 2px solid transparent;
      content: '';
      height: 3px;
      left: ${rem('15px')};
      position: absolute;
      top: ${rem('17px')};
      transform: rotate(-45deg);
      width: 8px;
    }
  }
`;

CheckBox.propTypes = {
  name: PropTypes.string,
  label: PropTypes.string,
  value: PropTypes.string,
  onChange: PropTypes.func,
  className: PropTypes.string,
  placeholder: PropTypes.string,
  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  readOnly: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])
};

export default CheckBox;
