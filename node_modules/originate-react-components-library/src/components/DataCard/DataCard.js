import React from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import styled, { keyframes, css } from 'styled-components';
import { rgba, rem } from 'polished';

const DataCard = ({
  title,
  children,
  noPadding,
  loading,
  className,
  size,
  style
}) => {
  return (
    <StyledDataCard
      noPadding={noPadding}
      loading={loading}
      className={classnames(
        `${size} ${className} ${loading === true ? 'loading' : ''}`
      )}
      style={style}
    >
      {title && <StyledTitle>{title}</StyledTitle>}
      <StyledContent>{children}</StyledContent>
    </StyledDataCard>
  );
};

const spin = keyframes`
	to {
      transform: rotate(1turn);
    }
`;

const StyledDataCard = styled.div`
	border-radius: ${rem('12px')};
	box-shadow: 0 4px 8px ${rgba(0, 0, 0, 0.1)};
	margin: 0 0 ${rem('32px')};
	padding: ${({ noPadding }) =>
    noPadding ? '0' : `${rem('40px')} ${rem('32px')}`};
	position: relative;
	background: #FFFFFF;
	
	${'' /* @include phone {
		padding: ${rem('25px')};
	} */}

	&.no-pad {
		padding: 0;
  }
  
  &.small {
		width: 350px;
	}

	&.medium {
		width: 600px;
	}

	&.large {
		width: 900px;
	}

	&.custom {
		width: 100%;
	}
	
	${({ loading }) =>
    loading &&
    css`
      &:before {
        background: ${({ theme }) =>
          rgba(theme.__OriginateLib.colors.white, 0.75)};
        border-radius: ${rem('12px')};
        cursor: wait;
        content: '';
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        z-index: 9;
        width: 100%;
      }

      &:after {
        animation: ${spin} 0.75s linear infinite;
        border: 7.5px solid
          ${({ theme }) => rgba(theme.__OriginateLib.colors.primary, 0.25)};
        border-radius: 50%;
        border-right-color: ${({ theme }) =>
          theme.__OriginateLib.colors.primary};
        box-sizing: border-box;
        content: '';
        display: inline-block;
        height: ${rem('75px')};
        left: 0;
        margin: auto;
        top: calc(50% - 37.5px);
        position: absolute;
        right: 0;
        width: ${rem('75px')};
        z-index: 99;
      }
    `}

    &:after {
      animation: ${spin} 0.75s linear infinite;
      border: 7.5px solid
        ${({ theme }) => rgba(theme.__OriginateLib.colors.primary, 0.25)};
      border-radius: 50%;
      border-right-color: ${({ theme }) => theme.__OriginateLib.colors.primary};
      box-sizing: border-box;
      content: '';
      display: inline-block;
      /* float: left; */
      height: ${rem('75px')};
      left: 0;
      margin: auto;
      top: calc(50% - 37.5px);
      position: absolute;
      right: 0;
      width: ${rem('75px')};
      z-index: 99;
    }
  }
`;

const StyledTitle = styled.h4`
  margin: 0 0 ${rem('24px')};
`;

const StyledContent = styled.div``;

DataCard.propTypes = {
  title: PropTypes.string,
  noPad: PropTypes.bool,
  loading: PropTypes.bool,
  className: PropTypes.string,
  size: PropTypes.string,
  style: PropTypes.object
};

DataCard.defaultProps = {
  className: '',
  title: '',
  noPad: false,
  size: 'custom',
  style: {}
};

export default DataCard;
