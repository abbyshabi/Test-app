import React from 'react';
import PropTypes from 'prop-types';
import { rgba, rem } from 'polished';
import styled, { keyframes } from 'styled-components';

const Loader = ({ className, noSpin, content }) => {
  return (
    <StyledLoader className={className == null ? '' : className}>
      {noSpin ? (
        ''
      ) : (
        <LoaderContent>
          <LoaderContentText>{content}</LoaderContentText>
        </LoaderContent>
      )}
    </StyledLoader>
  );
};

const spin = keyframes`
	to {
      transform: rotate(1turn);
    }
`;

const LoaderContent = styled.div`
  position: relative;
  line-height: ${rem('50px')};

  &:before {
    animation: ${spin} 0.75s linear infinite;
    border: 7.5px solid
      ${({ theme }) => rgba(theme.__OriginateLib.colors.primary, 0.25)};
    border-radius: 50%;
    border-right-color: ${({ theme }) => theme.__OriginateLib.colors.white};
    box-sizing: border-box;
    content: '';
    display: inline-block;
    float: left;
    left: 0;
    right: 0;
    height: ${rem('75px')};
    width: ${rem('75px')};
  }
`;

const LoaderContentText = styled.span`
  color: ${({ theme }) => theme.__OriginateLib.colors.white};
  float: left;
  font-weight: ${({ theme }) => theme.__OriginateLib.fontWeight.semiBold};
  margin: 0 0 0 20px;
`;

const StyledLoader = styled.div`
  align-content: center;
  align-items: center;
  background-color: ${({ theme }) =>
    rgba(theme.__OriginateLib.colors.text3, 0.9)};
  display: flex;
  height: 100vh;
  justify-content: center;
  justify-items: center;
  left: 0;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 999;
`;

Loader.propTypes = {
  content: PropTypes.string,
  noSpin: PropTypes.bool
};

export { Loader };
