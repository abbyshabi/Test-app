function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  font-size: ", ";\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    border-bottom: 1px solid\n      ", ";\n    display: grid;\n    font-weight: ", ";\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    justify-content: space-between;\n    padding: ", " 0;\n    width: 100%;\n\n    @include phone {\n      grid-template-columns: 1fr;\n      margin: 0 0 ", ";\n      padding: 0 0 ", ";\n      &:last-child {\n        margin: 0;\n      }\n    }\n\n    .tx-column {\n      position: relative;\n      &::before {\n      }\n    }\n    &:first-of-type {\n      padding: 0;\n    }\n  }\n  .transaction-table__header {\n    border: none;\n    color: ", ";\n    font-size: ", ";\n    font-weight: ", ";\n    line-height: 30px;\n    letter-spacing: 0.05em;\n    text-transform: uppercase;\n    padding-bottom: ", ";\n  }\n  .transaction-date {\n    color: ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { rem } from 'polished';

var TransactionTable = function TransactionTable(props) {
  return React.createElement(StyledTransactionTable, null, props.txTableHeaders === '' || props.txTableHeaders == null ? '' : React.createElement("li", {
    className: "transaction-table__header"
  }, props.txTableHeaders.map(function (val) {
    return React.createElement("div", null, val);
  })), props.children);
};

var StyledTransactionTable = styled.div(_templateObject(), rem('14px'), function (_ref) {
  var theme = _ref.theme;
  return theme.__OriginateLib.colors.disabled;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('20px'), rem('15px'), rem('15px'), function (_ref3) {
  var theme = _ref3.theme;
  return theme.__OriginateLib.colors.text2;
}, rem('12px'), function (_ref4) {
  var theme = _ref4.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('30px'), function (_ref5) {
  var theme = _ref5.theme;
  return theme.__OriginateLib.colors.text2;
});
TransactionTable.propTypes = {
  txTableHeaders: PropTypes.array
};
export default TransactionTable;