function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  appearance: none;\n  background: ", " url(", ")\n    center right ", " no-repeat;\n  border: 1px solid ", ";\n  border-radius: ", ";\n  box-shadow: none;\n  box-sizing: border-box;\n  display: block;\n  line-height: ", ";\n  outline: none;\n  padding: ", " ", " ", " ", ";\n  width: 100%;\n\n  &.border-bottom {\n    border-radius: 0;\n    border-width: 0 0 1px 0;\n    line-height: ", ";\n    padding: ", " 0;\n  }\n\n  &.error {\n    background-image: url(", ");\n    border-color: ", ";\n  }\n\n  .select__more-info {\n    display: block;\n    font-size: ", ";\n    line-height: ", ";\n    margin-top: ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  color: ", ";\n  display: inline-block;\n  float: left;\n  font-size: ", ";\n  font-weight: ", ";\n  line-height: ", ";\n  overflow: hidden;\n  margin: 0 0 ", ";\n  text-transform: uppercase;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  color: ", ";\n  display: block;\n  font-size: ", ";\n  margin: 0;\n\n  &:empty {\n    display: none;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: block;\n  margin: 0 0 ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { rem } from 'polished';
import img from '../../../static/icons/caret-down.svg';
import image from '../../../static/icons/error.svg';

var Select = function Select(_ref) {
  var className = _ref.className,
      autoComplete = _ref.autoComplete,
      autoFocus = _ref.autoFocus,
      defaultValue = _ref.defaultValue,
      disabled = _ref.disabled,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onChange = _ref.onChange,
      value = _ref.value,
      errorMessage = _ref.errorMessage,
      label = _ref.label,
      children = _ref.children;
  return React.createElement(SelectGroup, null, label == null ? '' : React.createElement(SelectLabel, null, label), React.createElement(StyledSelect, {
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    className: "select ".concat(className == null ? '' : className),
    defaultValue: defaultValue,
    disabled: disabled,
    name: name,
    onBlur: onBlur,
    onChange: onChange,
    value: value
  }, children), errorMessage && React.createElement(SelectErrorMessage, null, errorMessage));
};

var SelectGroup = styled.label(_templateObject(), rem('20px'));
var SelectErrorMessage = styled.span(_templateObject2(), function (_ref2) {
  var theme = _ref2.theme;
  return theme.__OriginateLib.colors.systemFail;
}, rem('11px'));
var SelectLabel = styled.span(_templateObject3(), function (_ref3) {
  var theme = _ref3.theme;
  return theme.__OriginateLib.colors.text2;
}, rem('11px'), function (_ref4) {
  var theme = _ref4.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('16px'), rem('8px'));
var StyledSelect = styled.select(_templateObject4(), function (_ref5) {
  var theme = _ref5.theme;
  return theme.__OriginateLib.colors.white;
}, img, rem('10px'), function (_ref6) {
  var theme = _ref6.theme;
  return theme.__OriginateLib.colors.text;
}, rem('4px'), rem('20px'), rem('10px'), rem('25px'), rem('10px'), rem('16px'), rem('20px'), rem('10px'), image, function (_ref7) {
  var theme = _ref7.theme;
  return theme.__OriginateLib.colors.systemFail;
}, rem('12px'), rem('16px'), rem('8px'));
Select.propTypes = {
  autoComplete: PropTypes.string,
  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  className: PropTypes.string,
  defaultValue: PropTypes.any,
  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  errorMessage: PropTypes.string,
  label: PropTypes.string,
  name: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  placeholder: PropTypes.string,
  readOnly: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  type: PropTypes.string,
  value: PropTypes.string
};
export default Select;