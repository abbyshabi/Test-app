function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  input {\n    background: ", " center right\n      ", " no-repeat;\n    border: 1px solid ", ";\n    border-radius: ", ";\n    box-shadow: none;\n    box-sizing: border-box;\n    display: block;\n    line-height: ", ";\n    margin: 0 auto;\n    outline: none;\n    padding: ", " ", ";\n    transition: 0.3s;\n    width: 100%;\n\n    @include placeholder-style(\n      ", "\n    );\n  }\n\n  .input {\n    background: ", " center right\n      ", " no-repeat;\n    border: 1px solid ", ";\n    border-radius: ", ";\n    box-shadow: none;\n    box-sizing: border-box;\n    color: ", ";\n    display: block;\n    line-height: ", ";\n    margin: 0 auto;\n    outline: none;\n    padding: ", " ", ";\n    transition: 0.3s;\n    width: 100%;\n\n    @include placeholder-style(\n      ", "\n    );\n\n    &-holder {\n      display: flex;\n      margin-bottom: ", ";\n      width: 100%;\n    }\n\n    &.border-bottom {\n      border-radius: 0;\n      border-width: 0 0 1px 0;\n      background: ", " center\n        right 0 no-repeat;\n      line-height: ", ";\n      padding: ", " 0;\n    }\n\n    &.margin-bottom {\n      margin: 0 0 ", ";\n    }\n\n    &.error {\n      background-image: url(", ");\n      border-color: ", ";\n    }\n\n    &__error {\n      color: ", ";\n      display: block;\n      font-size: ", ";\n      margin: 0;\n\n      &:empty {\n        display: none;\n      }\n    }\n\n    &__help-text {\n      display: block;\n      font-size: ", ";\n      margin: 0;\n\n      &:empty {\n        display: none;\n      }\n    }\n\n    &__label {\n      color: ", ";\n      cursor: pointer;\n      display: inline-block;\n      float: left;\n      font-size: ", ";\n      font-weight: ", ";\n      line-height: ", ";\n      overflow: hidden;\n      margin: 0 0 ", ";\n      text-transform: uppercase;\n    }\n\n    &__group {\n      display: block;\n      margin: 0 0 ", ";\n\n      &.has-append {\n        position: relative;\n\n        .append {\n          background: ", ";\n          border-radius: ", ";\n          color: ", ";\n          font-weight: ", ";\n          left: 0;\n          line-height: ", ";\n          margin: ", " 0;\n          padding: 0 ", ";\n          position: absolute;\n        }\n\n        input {\n          padding-left: ", ";\n        }\n      }\n    }\n\n    &__more-info {\n      display: block;\n      font-size: ", ";\n      line-height: ", ";\n      margin-top: ", ";\n    }\n\n    &__link {\n      float: right;\n      font-size: ", ";\n      line-height: ", ";\n\n      a {\n        display: block;\n        outline: none;\n        text-decoration: underline;\n\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  $track-color: #f2f8ff !default;\n  $thumb-color: ", " !default;\n\n  $thumb-radius: 12px !default;\n  $thumb-height: 24px !default;\n  $thumb-width: 24px !default;\n  $thumb-shadow-size: 4px !default;\n  $thumb-shadow-blur: 4px !default;\n  $thumb-shadow-color: ", " !default;\n  $thumb-border-width: 1px !default;\n  $thumb-border-color: #eceff1 !default;\n\n  $track-width: 100% !default;\n  $track-height: 10px !default;\n  $track-shadow-size: 1px !default;\n  $track-shadow-blur: 1px !default;\n  $track-shadow-color: ", " !default;\n  $track-border-width: 0px !default;\n  $track-border-color: #cfd8dc !default;\n\n  $track-radius: 5px !default;\n  $contrast: 5% !default;\n\n  $ie-bottom-track-color: darken($track-color, $contrast) !default;\n\n  @mixin shadow($shadow-size, $shadow-blur, $shadow-color) {\n    box-shadow: $shadow-size $shadow-size $shadow-blur $shadow-color,\n      0 0 $shadow-size lighten($shadow-color, 5%);\n  }\n\n  @mixin track {\n    cursor: pointer;\n    height: $track-height;\n    transition: all 0.2s ease;\n    width: $track-width;\n  }\n\n  @mixin thumb($adjustment: 0) {\n    @include shadow(\n      $thumb-shadow-size,\n      $thumb-shadow-blur,\n      $thumb-shadow-color\n    );\n    background: $thumb-color;\n    border: $thumb-border-width solid $thumb-border-color;\n    border-radius: $thumb-radius;\n    cursor: pointer;\n    height: $thumb-height + $adjustment;\n    width: $thumb-width + $adjustment;\n  }\n\n  @mixin disabled {\n    cursor: not-allowed;\n  }\n\n  [type='range'] {\n    -webkit-appearance: none;\n    background: transparent;\n    border: none;\n    margin: $thumb-height / 2 0;\n    width: $track-width;\n\n    &::-moz-focus-outer {\n      border: 0;\n    }\n\n    /*&:focus {\n\t\toutline: 0;\n\n\t\t&::-webkit-slider-runnable-track {\n\t\t\tbackground: lighten($track-color, $contrast);\n\t\t}\n\n\t\t&::-ms-fill-lower {\n\t\t\tbackground: $track-color;\n\t\t}\n\n\t\t&::-ms-fill-upper {\n\t\t\tbackground: lighten($track-color, $contrast);\n\t\t}\n\t}*/\n\n    &::-webkit-slider-runnable-track {\n      @include track;\n      @include shadow(\n        $track-shadow-size,\n        $track-shadow-blur,\n        $track-shadow-color\n      );\n      background: $track-color;\n      border: $track-border-width solid $track-border-color;\n      border-radius: $track-radius;\n    }\n\n    &::-webkit-slider-thumb {\n      @include thumb;\n      -webkit-appearance: none;\n      margin-top: (\n        (-$track-border-width * 2 + $track-height) / 2 - $thumb-height / 2\n      );\n    }\n\n    &::-moz-range-track {\n      @include shadow(\n        $track-shadow-size,\n        $track-shadow-blur,\n        $track-shadow-color\n      );\n      @include track;\n      background: $track-color;\n      border: $track-border-width solid $track-border-color;\n      border-radius: $track-radius;\n      height: $track-height / 2;\n    }\n\n    &::-moz-range-thumb {\n      @include thumb(-4);\n    }\n\n    &::-ms-track {\n      @include track;\n      background: transparent;\n      border-color: transparent;\n      border-width: ($thumb-height / 2) 0;\n      color: transparent;\n    }\n\n    &::-ms-fill-lower {\n      @include shadow(\n        $track-shadow-size,\n        $track-shadow-blur,\n        $track-shadow-color\n      );\n      background: $ie-bottom-track-color;\n      border: $track-border-width solid $track-border-color;\n      border-radius: ($track-radius * 2);\n    }\n\n    &::-ms-fill-upper {\n      @include shadow(\n        $track-shadow-size,\n        $track-shadow-blur,\n        $track-shadow-color\n      );\n      background: $track-color;\n      border: $track-border-width solid $track-border-color;\n      border-radius: ($track-radius * 2);\n    }\n\n    &::-ms-thumb {\n      @include thumb(-4);\n      margin-top: $track-height / 4;\n    }\n\n    &:disabled {\n      &::-webkit-slider-thumb {\n        @include disabled;\n      }\n\n      &::-moz-range-thumb {\n        @include disabled;\n      }\n\n      &::-ms-thumb {\n        @include disabled;\n      }\n\n      &::-webkit-slider-runnable-track {\n        @include disabled;\n      }\n\n      &::-ms-fill-lower {\n        @include disabled;\n      }\n\n      &::-ms-fill-upper {\n        @include disabled;\n      }\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import { Link } from 'react-router-dom';
import styled from 'styled-components';
import { rgba, rem } from 'polished';
import img from '../../../static/icons/error.svg';
import NumberFormat from 'react-number-format';

var Input = function Input(_ref) {
  var amountField = _ref.amountField,
      phoneField = _ref.phoneField,
      className = _ref.className,
      label = _ref.label,
      type = _ref.type,
      linkText = _ref.linkText,
      linkReference = _ref.linkReference,
      icon = _ref.icon,
      info = _ref.info,
      errorMessage = _ref.errorMessage,
      autoComplete = _ref.autoComplete,
      autoFocus = _ref.autoFocus,
      defaultValue = _ref.defaultValue,
      disabled = _ref.disabled,
      minlength = _ref.minlength,
      maxlength = _ref.maxlength,
      name = _ref.name,
      onBlur = _ref.onBlur,
      onKeyDown = _ref.onKeyDown,
      onKeyUp = _ref.onKeyUp,
      onKeyPress = _ref.onKeyPress,
      onChange = _ref.onChange,
      placeholder = _ref.placeholder,
      readOnly = _ref.readOnly,
      value = _ref.value,
      classes = _ref.classes,
      min = _ref.min,
      max = _ref.max,
      restProps = _objectWithoutProperties(_ref, ["amountField", "phoneField", "className", "label", "type", "linkText", "linkReference", "icon", "info", "errorMessage", "autoComplete", "autoFocus", "defaultValue", "disabled", "minlength", "maxlength", "name", "onBlur", "onKeyDown", "onKeyUp", "onKeyPress", "onChange", "placeholder", "readOnly", "value", "classes", "min", "max"]);

  return React.createElement(StyledInput, null, React.createElement("label", {
    className: "input__group ".concat(amountField || phoneField ? 'has-append' : '')
  }, label == null ? '' : React.createElement("span", {
    className: 'input__label'
  }, label), linkText == null ? '' : React.createElement("div", {
    className: 'input__link'
  }, React.createElement(Link, {
    to: "".concat(linkReference),
    tabIndex: "-1"
  }, linkText)), React.createElement("div", {
    className: "input-holder"
  }, amountField && React.createElement("span", {
    className: "append"
  }, "NGN"), phoneField && React.createElement("span", {
    className: "append"
  }, "+234"), amountField ? React.createElement(NumberFormat, {
    thousandSeparator: true,
    type: "tel",
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    className: "input ".concat(className == null ? '' : className),
    defaultValue: defaultValue,
    disabled: disabled ? 'disabled' : '',
    min: min,
    max: max,
    minLength: minlength,
    maxLength: maxlength,
    name: name,
    onBlur: onBlur,
    onKeyUp: onKeyUp,
    onKeyDown: onKeyDown,
    onKeyPress: onKeyPress,
    onChange: onChange,
    placeholder: placeholder,
    readOnly: readOnly,
    value: value
  }) : React.createElement("input", {
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    className: "input ".concat(className == null ? '' : className),
    defaultValue: defaultValue,
    disabled: disabled ? 'disabled' : '',
    min: min,
    max: max,
    minLength: minlength,
    maxLength: maxlength,
    name: name,
    onBlur: onBlur,
    onKeyUp: onKeyUp,
    onKeyDown: onKeyDown,
    onKeyPress: onKeyPress,
    onChange: onChange,
    placeholder: placeholder,
    readOnly: readOnly,
    type: type == null ? 'text' : type,
    value: value
  })), errorMessage && React.createElement("span", {
    className: 'input__error'
  }, errorMessage)));
};

Input.defaultProps = {
  type: 'text',
  unauthenticated: '',
  icon: '',
  info: ''
};
Input.propTypes = {
  label: PropTypes.string,
  className: PropTypes.string,
  info: PropTypes.string,
  type: PropTypes.string,
  unauthenticated: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  icon: PropTypes.string
};
var StyledInput = styled.div(_templateObject(), function (_ref2) {
  var theme = _ref2.theme;
  return theme.__OriginateLib.colors.white;
}, rem('16px'), function (_ref3) {
  var theme = _ref3.theme;
  return theme.__OriginateLib.colors.text;
}, rem('4px'), rem('20px'), rem('10px'), rem('16px'), function (_ref4) {
  var theme = _ref4.theme;
  return theme.__OriginateLib.colors.text;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.__OriginateLib.colors.white;
}, rem('16px'), function (_ref6) {
  var theme = _ref6.theme;
  return theme.__OriginateLib.colors.text;
}, rem('4px'), function (_ref7) {
  var theme = _ref7.theme;
  return theme.__OriginateLib.colors.text;
}, rem('20px'), rem('10px'), rem('16px'), function (_ref8) {
  var theme = _ref8.theme;
  return theme.__OriginateLib.colors.text;
}, rem('5px'), function (_ref9) {
  var theme = _ref9.theme;
  return theme.__OriginateLib.colors.white;
}, rem('20px'), rem('10px'), rem('30px'), img, function (_ref10) {
  var theme = _ref10.theme;
  return theme.__OriginateLib.colors.systemFail;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.__OriginateLib.colors.systemFail;
}, rem('11px'), rem('11px'), function (_ref12) {
  var theme = _ref12.theme;
  return theme.__OriginateLib.colors.text2;
}, rem('11px'), function (_ref13) {
  var theme = _ref13.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('16px'), rem('8px'), rem('20px'), function (_ref14) {
  var theme = _ref14.theme;
  return rgba(theme.__OriginateLib.colors.secondary, 0.1);
}, rem('4px'), function (_ref15) {
  var theme = _ref15.theme;
  return theme.__OriginateLib.colors.text3;
}, function (_ref16) {
  var theme = _ref16.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('32px'), rem('4px'), rem('10px'), rem('60px'), rem('12px'), rem('16px'), rem('8px'), rem('12px'), rem('16px'), function (_ref17) {
  var theme = _ref17.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref18) {
  var theme = _ref18.theme;
  return rgba(0, 0, 0, 0.2);
}, function (_ref19) {
  var theme = _ref19.theme;
  return rgba(0, 0, 0, 0.2);
});
export default Input;