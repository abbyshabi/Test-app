function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: grid;\n\n  &.center {\n    justify-content: center;\n  }\n\n  &.margin {\n    margin: 0 0 ", ";\n  }\n\n  &.two-grid {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: ", ";\n\n    @include phone {\n      grid-template-columns: 1fr;\n      grid-gap: ", ";\n    }\n  }\n\n  &.three-grid {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: ", ";\n\n    @include phone {\n      grid-template-columns: 1fr;\n      grid-gap: ", ";\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { rem } from 'polished';

var FormGroup = function FormGroup(_ref) {
  var className = _ref.className,
      children = _ref.children;
  return React.createElement(StyledFormGroup, {
    className: className
  }, children);
};

FormGroup.propTypes = {
  classes: PropTypes.string
};
var StyledFormGroup = styled.div(_templateObject(), rem('30px'), rem('30px'), rem('10px'), rem('30px'), rem('10px'));
export default FormGroup;