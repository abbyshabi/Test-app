function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  textarea {\n    background: ", " no-repeat\n      top 10px right 10px;\n    border: 1px solid ", ";\n    border-radius: ", ";\n    box-shadow: none;\n    box-sizing: border-box;\n    display: block;\n    height: auto;\n    line-height: ", ";\n    margin: 0 auto;\n    outline: none;\n    padding: ", " ", ";\n    resize: none;\n    width: 100%;\n\n    @include placeholder-style(\n      ", "\n    );\n  }\n\n  .textarea {\n    background: ", " no-repeat\n      top 10px right 10px;\n    border: 1px solid ", ";\n    border-radius: ", ";\n    box-shadow: none;\n    box-sizing: border-box;\n    display: block;\n    height: auto;\n    line-height: ", ";\n    margin: 0 auto;\n    outline: none;\n    padding: ", " ", ";\n    resize: none;\n    width: 100%;\n\n    &.border-bottom {\n      border-radius: 0;\n      border-width: 0 0 1px 0;\n      line-height: ", ";\n      padding: 0 0 ", ";\n    }\n\n    &.error {\n      background-image: url(", ");\n      border-color: ", ";\n    }\n\n    &__error {\n      color: ", ";\n      display: block;\n      font-size: ", ";\n      margin: 0;\n\n      &:empty {\n        display: none;\n      }\n    }\n\n    &__label {\n      display: block;\n      font-size: ", ";\n      font-weight: ", ";\n      line-height: ", ";\n      margin: 0 0 ", ";\n    }\n\n    &__group {\n      display: block;\n      margin: 0 0 ", ";\n    }\n\n    &__more-info {\n      display: block;\n      font-size: ", ";\n      line-height: ", ";\n      margin-top: ", ";\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import { rem } from 'polished';
import img from '../../../static/icons/error.svg';

var TextArea = function TextArea(_ref) {
  var className = _ref.className,
      autoComplete = _ref.autoComplete,
      autoFocus = _ref.autoFocus,
      cols = _ref.cols,
      rows = _ref.rows,
      value = _ref.value,
      disabled = _ref.disabled,
      readOnly = _ref.readOnly,
      name = _ref.name,
      placeholder = _ref.placeholder,
      onChange = _ref.onChange,
      onBlur = _ref.onBlur,
      errorMessage = _ref.errorMessage,
      label = _ref.label;
  return React.createElement(StyledTextArea, null, React.createElement("label", {
    className: 'textarea__group'
  }, label == null ? '' : React.createElement("span", {
    className: 'textarea__label'
  }, label), React.createElement("textarea", {
    autoComplete: autoComplete,
    autoFocus: autoFocus,
    className: "textarea ".concat(className == null ? '' : className),
    cols: cols,
    rows: rows,
    value: value,
    disabled: disabled,
    readOnly: readOnly,
    onChange: onChange,
    name: name,
    placeholder: placeholder,
    onBlur: onBlur
  }), errorMessage && React.createElement("span", {
    className: 'textarea__error'
  }, errorMessage)));
};

var StyledTextArea = styled.div(_templateObject(), function (_ref2) {
  var theme = _ref2.theme;
  return theme.__OriginateLib.colors.white;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.__OriginateLib.colors.text;
}, rem('4px'), rem('24px'), rem('12px'), rem('16px'), function (_ref4) {
  var theme = _ref4.theme;
  return theme.__OriginateLib.colors.text;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.__OriginateLib.colors.white;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.__OriginateLib.colors.text;
}, rem('4px'), rem('24px'), rem('12px'), rem('16px'), rem('20px'), rem('15px'), img, function (_ref7) {
  var theme = _ref7.theme;
  return theme.__OriginateLib.colors.systemFail;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.__OriginateLib.colors.systemFail;
}, rem('11px'), rem('14px'), function (_ref9) {
  var theme = _ref9.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('16px'), rem('8px'), rem('20px'), rem('12px'), rem('16px'), rem('8px'));
TextArea.propTypes = {
  cols: PropTypes.string,
  rows: PropTypes.string,
  name: PropTypes.string,
  type: PropTypes.string,
  label: PropTypes.string,
  value: PropTypes.string,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  className: PropTypes.string,
  errorMessage: PropTypes.string,
  autoComplete: PropTypes.string,
  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  readOnly: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])
};
export default TextArea;