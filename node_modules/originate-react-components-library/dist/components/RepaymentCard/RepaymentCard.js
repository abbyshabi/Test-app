function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: grid;\n  grid-template-columns: 7fr 3fr;\n\n  @include phone {\n    grid-template-columns: 1fr;\n  }\n\n  @include tablet {\n    grid-template-columns: 6fr 3fr;\n  }\n\n  @include phone {\n    grid-template-columns: 1fr;\n  }\n\n  .left {\n    padding: 0 ", " 0 0;\n\n    @include phone {\n      padding: 0 0 ", ";\n    }\n  }\n\n  .right {\n    border: 0 solid ", ";\n    border-left-width: 2px;\n    padding: 0 0 0 ", ";\n\n    @include phone {\n      border-left-width: 0;\n      border-top-width: 1px;\n      padding: ", " 0 0;\n    }\n  }\n\n  h6 {\n    color: ", ";\n    font-size: ", ";\n    margin: 0 0 ", ";\n\n    @include phone-tablet {\n      margin: 0 0 t ", ";\n    }\n  }\n\n  h1 {\n    line-height: 1em;\n    margin: 0 0 ", ";\n    padding: 0;\n\n    @include phone-tablet {\n      font-size: ", ";\n      margin: 0 0 ", ";\n    }\n\n    span {\n      color: ", ";\n      font-weight: ", ";\n      margin: 0 ", ";\n\n      @include phone {\n        display: block;\n        margin: 0;\n      }\n    }\n  }\n\n  button,\n  .button {\n    border: 1px solid ", ";\n  }\n\n  .repayment-progress {\n    background: ", ";\n    border-radius: ", ";\n    height: ", ";\n    margin: 0 0 ", ";\n    width: 100%;\n\n    .progress {\n      background: ", ";\n      border-radius: ", ";\n      display: block;\n      height: ", ";\n      width: 0;\n    }\n  }\n\n  .text {\n    color: ", ";\n    display: block;\n    font-weight: ", ";\n    margin: 0 0 ", ";\n\n    @include phone-tablet {\n      margin: 0 0 ", ";\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { Button, Popup } from '../index';
import { rgba, rem } from 'polished';
import styled from 'styled-components';
import { format } from 'date-fns';

var RepaymentCard = function RepaymentCard(_ref) {
  var percent = _ref.percent,
      amountPaid = _ref.amountPaid,
      fullAmount = _ref.fullAmount,
      repaymentAmount = _ref.repaymentAmount,
      repaymentDate = _ref.repaymentDate,
      className = _ref.className,
      BankDetails = _ref.BankDetails,
      portfolioNumber = _ref.portfolioNumber;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      showPopup = _useState2[0],
      setShowPopup = _useState2[1];

  var handleShowPopup = function handleShowPopup() {
    setShowPopup(!showPopup);
  };

  var progressWidth = {
    width: "".concat(Math.abs(percent).toFixed(2), "%")
  };
  return React.createElement(StyledRepayment, {
    className: 'repayment-card'
  }, React.createElement("div", {
    className: "left"
  }, React.createElement("h6", null, "Your Current Repayment"), React.createElement("h1", null, "NGN ", amountPaid, " ", React.createElement("span", null, "of"), " NGN ", fullAmount), React.createElement("div", {
    className: "repayment-progress"
  }, React.createElement("span", {
    className: "progress",
    style: progressWidth
  })), React.createElement("span", {
    className: "text"
  }, percent, "% Complete")), React.createElement("div", {
    className: "right"
  }, React.createElement("h6", null, "Your Next Payment"), React.createElement("h1", null, "NGN ", repaymentAmount), React.createElement("span", {
    className: "text"
  }, format(repaymentDate, 'MMMM D, YYYY')), React.createElement(Button, {
    className: "secondary block",
    click_event: handleShowPopup
  }, "Make a payment"), showPopup && React.createElement(Popup, {
    title: "Bank Details",
    className: "loan-requirements"
  }, React.createElement("p", null, "You can make payment to the account below:"), React.createElement("ul", null, React.createElement("li", null, "BANK NAME : First Bank"), React.createElement("li", null, "ACCOUNT NUMBER : 932732732323"), React.createElement("li", null, "ACCOUNT NAME : Kwikpay")), React.createElement("p", null, "Use ", React.createElement("span", {
    className: "bold-text"
  }, portfolioNumber), " as the narrative."), React.createElement("div", {
    className: "button-list center-text"
  }, React.createElement(Button, {
    className: "close-button",
    click_event: handleShowPopup
  }, "Close")))));
};

var StyledRepayment = styled.section(_templateObject(), rem('30px'), rem('20px'), function (_ref2) {
  var theme = _ref2.theme;
  return rgba(165, 173, 182, 0.3);
}, rem('30px'), rem('30px'), function (_ref3) {
  var theme = _ref3.theme;
  return theme.__OriginateLib.colors.primary;
}, rem('12px'), rem('20px'), rem('15px'), rem('15px'), rem('30px'), rem('10px'), function (_ref4) {
  var theme = _ref4.theme;
  return theme.__OriginateLib.colors.text2;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.__OriginateLib.fontWeight.regular;
}, rem('10px'), function (_ref6) {
  var theme = _ref6.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref7) {
  var theme = _ref7.theme;
  return rgba(theme.__OriginateLib.colors.green, 0.15);
}, rem('5px'), rem('10px'), rem('15px'), function (_ref8) {
  var theme = _ref8.theme;
  return theme.__OriginateLib.colors.green;
}, rem('5px'), rem('10px'), function (_ref9) {
  var theme = _ref9.theme;
  return theme.__OriginateLib.colors.text2;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('15px'), rem('10px'));
RepaymentCard.propTypes = {
  amountPaid: PropTypes.number,
  fullAmount: PropTypes.number,
  percent: PropTypes.number,
  repaymentAmount: PropTypes.number,
  repaymentDate: PropTypes.any
};
export default RepaymentCard;