function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { ThemeProvider } from 'styled-components';
import { GlobalStyles } from '../../stylesheets/Global';
import PropTypes from 'prop-types';
var secondaryColor = '#9DD858';
var defaultTheme = {
  colors: {
    primary: '#234C56',
    secondary: secondaryColor,
    tertiary: '#9DD858',
    white: '#FFFFFF',
    black: '#000000',
    border: '#4C5C6D',
    grey: '#A4A59A',
    green: secondaryColor,
    systemFail: '#AE4036',
    systemSuccess: '#219653',
    systemPending: '#2D9CDB',
    statusSuccess: '#6FCF97',
    statusRejected: '#EB5757',
    colorPrimary: '#FBFDFF',
    text: '#4C5C6D',
    text2: '#A5ADB6',
    text3: '#234C56',
    disabled: '#D3D4D8',
    red: '#B35151',
    yellow: '#CC9E58',
    backgroundGrey: '#E5E5E5',
    facebookBlue: '#3B5998',
    button: secondaryColor
  },
  fontWeight: {
    regular: 400,
    semiBold: 600,
    bold: 600
  },
  fontFamily: {
    "default": '"Muli", "-apple-system", "BlinkMacSystemFont", "Segoe UI", "Roboto", "Helvetica", "Arial", "sans-serif", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'
  },
  breakpoints: {
    mobile: '767px',
    tablet: '979px',
    medium: '1199px'
  } // ðŸ‘† default theme

};

var OriginateLibThemeProvider = function OriginateLibThemeProvider(_ref) {
  var children = _ref.children,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme;
  var _theme = {
    __OriginateLib: _objectSpread({}, defaultTheme, {}, theme) // Namespace the theme for the user

  };
  return React.createElement(ThemeProvider, {
    theme: _theme
  }, React.createElement(React.Fragment, null, children, React.createElement(GlobalStyles, null)));
};

ThemeProvider.propTypes = {
  theme: PropTypes.object
};
export { OriginateLibThemeProvider as ThemeProvider, defaultTheme };