function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  border: none;\n  background-color: ", ";\n  border-radius: ", ";\n  box-shadow: none;\n  color: ", ";\n  cursor: pointer;\n  display: inline-block;\n  font-size: ", ";\n  font-weight: ", ";\n  line-height: ", ";\n  outline: none;\n  overflow: hidden;\n  padding: ", " ", ";\n  position: relative;\n  text-align: center;\n  transition: 0.3s;\n\n  &:after {\n    border: 2px solid transparent;\n    border-radius: 50%;\n    border-right-color: ", ";\n    box-sizing: border-box;\n    content: '';\n    display: inline-block;\n    float: right;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    height: ", ";\n    position: absolute;\n    visibility: hidden;\n    width: ", ";\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    color: ", ";\n  }\n\n  &:disabled {\n    background: rgba(", ", 0.65);\n    cursor: not-allowed;\n  }\n\n  &.small {\n    font-size: ", ";\n    padding: ", " ", ";\n  }\n\n  &.secondary {\n    background-color: ", ";\n    color: ", ";\n\n    &:after {\n      border-right-color: ", ";\n    }\n\n    .icon {\n      svg {\n        fill: ", ";\n      }\n    }\n\n    &:active,\n    &:hover {\n    }\n\n    &:disabled {\n      color: rgba(", ", 0.65);\n\n      .icon {\n        svg {\n          fill: ", ";\n        }\n      }\n    }\n  }\n\n  &.link {\n    padding: 0;\n    margin: ", " ", ";\n  }\n\n  &.previous {\n    background-color: ", ";\n    border: 1px solid ", ";\n    color: ", ";\n  }\n\n  &.next {\n    border: 1px solid ", ";\n  }\n\n  &.facebook {\n    background: ", ";\n    border-color: ", ";\n\n    .icon {\n      float: left;\n\n      svg {\n        display: block;\n      }\n    }\n  }\n\n  .icon {\n    svg {\n      fill: ", ";\n    }\n  }\n\n  &.icon-left {\n    .icon {\n      margin-right: ", ";\n    }\n  }\n\n  &.icon-right {\n    .icon {\n      float: right;\n      margin-left: ", ";\n    }\n  }\n\n  &.right {\n    float: right;\n  }\n\n  &.block {\n    display: block;\n    width: 100%;\n  }\n\n  &.center {\n    display: block;\n    margin: 0 auto;\n  }\n\n  &.center-inline {\n    display: inline-block;\n    margin: 0 auto;\n  }\n\n  &.loading {\n    ", " {\n      opacity: 0;\n    }\n\n    &:after {\n      animation: ", " 0.6s linear infinite;\n      visibility: visible;\n    }\n  }\n\n  &-list {\n    button {\n      margin-right: ", ";\n    }\n  }\n\n  &-prev-next {\n    margin: ", " 0 0;\n    overflow: hidden;\n    text-align: center;\n\n    .button {\n      margin: 0 auto ", ";\n\n      &:last-of-type {\n        margin: 0 auto;\n      }\n    }\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  transition: 0.3s;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n\tto {\n      transform: rotate(1turn);\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import classnames from 'classnames';
import styled, { keyframes } from 'styled-components';
import { rem } from 'polished';
import PropTypes from 'prop-types';

var Button = function Button(_ref) {
  var children = _ref.children,
      className = _ref.className,
      button_text = _ref.button_text,
      name = _ref.name,
      buttonId = _ref.buttonId,
      value = _ref.value,
      disabled = _ref.disabled,
      click_event = _ref.click_event,
      type = _ref.type,
      style = _ref.style;
  return React.createElement(StyledButton, {
    name: name,
    id: buttonId,
    value: value,
    className: classnames("".concat(className)),
    disabled: disabled === true ? 'disabled' : '',
    onClick: click_event,
    type: type ? type : 'button',
    style: style
  }, React.createElement(ButtonText, null, children || button_text));
};

var spin = keyframes(_templateObject());
var ButtonText = styled.span(_templateObject2());
var StyledButton = styled.button(_templateObject3(), function (_ref2) {
  var theme = _ref2.theme;
  return theme.__OriginateLib.colors.secondary;
}, rem('4px'), function (_ref3) {
  var theme = _ref3.theme;
  return theme.__OriginateLib.colors.white;
}, rem('16px'), function (_ref4) {
  var theme = _ref4.theme;
  return theme.__OriginateLib.fontWeight.semiBold;
}, rem('20px'), rem('10px'), rem('32px'), function (_ref5) {
  var theme = _ref5.theme;
  return theme.__OriginateLib.colors.white;
}, rem('20px'), rem('20px'), function (_ref6) {
  var theme = _ref6.theme;
  return theme.__OriginateLib.colors.white;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.__OriginateLib.colors.white;
}, rem('14px'), rem('5px'), rem('15px'), function (_ref8) {
  var theme = _ref8.theme;
  return theme.__OriginateLib.colors.white;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.__OriginateLib.colors.disabled;
}, rem('10px'), rem('32px'), function (_ref14) {
  var theme = _ref14.theme;
  return theme.__OriginateLib.colors.white;
}, function (_ref15) {
  var theme = _ref15.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref16) {
  var theme = _ref16.theme;
  return theme.__OriginateLib.colors.primary;
}, function (_ref17) {
  var theme = _ref17.theme;
  return theme.__OriginateLib.colors.button;
}, function (_ref18) {
  var theme = _ref18.theme;
  return theme.__OriginateLib.colors.facebookBlue;
}, function (_ref19) {
  var theme = _ref19.theme;
  return theme.__OriginateLib.colors.facebookBlue;
}, function (_ref20) {
  var theme = _ref20.theme;
  return theme.__OriginateLib.colors.white;
}, rem('12px'), rem('12px'), ButtonText, spin, rem('20px'), rem('30px'), rem('15px'));
Button.propTypes = {
  name: PropTypes.string,
  id: PropTypes.string,
  value: PropTypes.string,
  className: PropTypes.string,
  disabled: PropTypes.bool,
  type: PropTypes.string,
  onClick: PropTypes.func,
  style: PropTypes.object
};
Button.defaultProps = {
  name: '',
  id: '',
  value: '',
  className: '',
  disabled: '',
  type: '',
  onClick: '',
  style: {}
};
export default Button;