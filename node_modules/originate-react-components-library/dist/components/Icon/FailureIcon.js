function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';

var FailureIcon = function FailureIcon(props) {
  return React.createElement("svg", _extends({
    width: 92,
    height: 92,
    fill: "none"
  }, props), React.createElement("g", {
    filter: "url(#prefix__filter0_d)"
  }, React.createElement("circle", {
    cx: 46,
    cy: 42,
    r: 42,
    fill: "#9A3334"
  }), React.createElement("circle", {
    cx: 46,
    cy: 42,
    r: 41,
    stroke: "#fff",
    strokeWidth: 2
  })), React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M60.413 31.68a2.186 2.186 0 0 0-3.092-3.092l-7.993 7.992a4 4 0 0 1-5.657 0l-7.992-7.992a2.186 2.186 0 0 0-3.092 3.091l7.993 7.993a4 4 0 0 1 0 5.657l-7.992 7.992a2.186 2.186 0 1 0 3.091 3.092l7.992-7.993a4 4 0 0 1 5.657 0l7.993 7.993a2.186 2.186 0 1 0 3.092-3.092L52.42 45.33a4 4 0 0 1 0-5.657l7.992-7.992z",
    fill: "#fff"
  }), React.createElement("defs", null, React.createElement("filter", {
    id: "prefix__filter0_d",
    x: 0,
    y: 0,
    width: 92,
    height: 92,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, React.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), React.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
  }), React.createElement("feOffset", {
    dy: 4
  }), React.createElement("feGaussianBlur", {
    stdDeviation: 2
  }), React.createElement("feColorMatrix", {
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0"
  }), React.createElement("feBlend", {
    in2: "BackgroundImageFix",
    result: "effect1_dropShadow"
  }), React.createElement("feBlend", {
    "in": "SourceGraphic",
    in2: "effect1_dropShadow",
    result: "shape"
  }))));
};

export default FailureIcon;